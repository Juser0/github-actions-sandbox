name: benchmark-java

permissions:
  contents: read

on:
  push:
    branches:
      - 'main'

jobs:
  benchmark:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        case:
          - dockerfile-openjdk:17-jdk
          - dockerfile-openjdk:17-jdk-slim
          - dockerfile-openjdk:17-jre
          - dockerfile-temurin:17-jre-alpine
          - bootBuildImage

    steps:
      - name: Checkout code
        run: |
          git clone https://github.com/Juser0/military-recruit.git

      - name: Get commit count
        run: |
          cd military-recruit
          echo "count=$(git rev-list --all --count)" >> $GITHUB_ENV

      - name: Set up JRE 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          java-package: jre

      - name: Grant execute permission for gradlew
        run: |
          cd military-recruit
          chmod +x gradlew

      - name: Build application (if Dockerfile case)
        if: matrix.case != 'bootBuildImage'
        run: |
          cd military-recruit
          ./gradlew build -x test

      - name: Generate Dockerfile (if Dockerfile case)
        if: matrix.case != 'bootBuildImage'
        run: |
          cd military-recruit
          case="${{ matrix.case }}"
          dockerfile_base="${case#dockerfile-}"
          echo "FROM $dockerfile_base" > Dockerfile
          echo "COPY build/libs/*.jar /app/app.jar" >> Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "CMD [\"java\", \"-jar\", \"app.jar\"]" >> Dockerfile

      - name: Build Docker image (if Dockerfile case)
        if: matrix.case != 'bootBuildImage'
        run: |
          cd military-recruit
          docker build -t ${{ matrix.case }}:${{ env.count }} .

      - name: Save Docker image as tar (if Dockerfile case)
        if: matrix.case != 'bootBuildImage'
        run: |
          cd military-recruit
          docker save ${{ matrix.case }}:${{ env.count }} -o ${{ matrix.case }}-${{ env.count }}.tar

      - name: Upload Docker image artifact (if Dockerfile case)
        if: matrix.case != 'bootBuildImage'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.case }}-${{ env.count }}
          path: ${{ matrix.case }}-${{ env.count }}.tar

      - name: Build bootBuildImage
        if: matrix.case == 'bootBuildImage'
        run: |
          cd military-recruit
          ./gradlew bootBuildImage --imageName=bootBuildImage:${{ env.count }} --createdDate=now

      - name: Save bootBuildImage as tar
        if: matrix.case == 'bootBuildImage'
        run: |
          cd military-recruit
          docker save bootBuildImage:${{ env.count }} -o bootBuildImage-${{ env.count }}.tar

      - name: Upload bootBuildImage artifact
        if: matrix.case == 'bootBuildImage'
        uses: actions/upload-artifact@v3
        with:
          name: bootBuildImage-${{ env.count }}
          path: bootBuildImage-${{ env.count }}.tar
